name: Create Patch

on:
  release:
    types: [published]
  workflow_dispatch:

jobs:
  create-patch:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout the repository
      uses: actions/checkout@v4

    - name: Install xdelta3
      run: sudo apt-get install -y xdelta3

    - name: Fetch all tags
      run: git fetch --tags

    - name: List all tags
      run: |
        echo "Available tags:"
        git tag --sort=-creatordate

    - name: Download previous release assets
      run: |
        # Get the latest tag
        latest_tag=$(git describe --tags `git rev-list --tags --max-count=1`)
        echo "Latest tag: $latest_tag"

        # List all tags for verification
        echo "All tags sorted by creation date:"
        git tag --sort=-creatordate

        # Get the previous tag by sorting all tags in descending order and excluding the latest tag
        previous_tag=$(git tag --sort=-v:refname | grep -v "$latest_tag" | head -n 1)
        echo "Previous release tag: $previous_tag"

        if [ "$previous_tag" == "$latest_tag" ]; then
          echo "Error: Previous tag and latest tag are the same. Exiting."
          exit 1
        fi

        assets=("rls_career_overhaul.zip" "rls_career_overhaul_noMap.zip")
        for asset in "${assets[@]}"; do
          url="https://github.com/Raceless-RLS/rls_career_overhaul/releases/download/$previous_tag/$asset"
          echo "Downloading $asset from $url"
          wget $url -O old_$asset
          if [ $? -ne 0 ]; then
            echo "Failed to download $asset from $url"
            exit 1
          else
            echo "Successfully downloaded $asset"
          fi
        done

    - name: Download current release assets
      run: |
        # Get the latest tag again to ensure it's correct
        current_tag=$(git describe --tags `git rev-list --tags --max-count=1`)
        echo "Current tag: $current_tag"
        assets=("rls_career_overhaul.zip" "rls_career_overhaul_noMap.zip")
        for asset in "${assets[@]}"; do
          url="https://github.com/Raceless-RLS/rls_career_overhaul/releases/download/$current_tag/$asset"
          echo "Downloading $asset from $url"
          wget $url -O new_$asset
          if [ $? -ne 0 ]; then
            echo "Failed to download $asset from $url"
            exit 1
          else
            echo "Successfully downloaded $asset"
          fi
        done

    - name: Create patch files
      run: |
        assets=("rls_career_overhaul.zip" "rls_career_overhaul_noMap.zip")
        for asset in "${assets[@]}"; do
          echo "Creating patch for $asset"
          xdelta3 -e -s old_$asset new_$asset patch_$asset.xdelta
          if [ $? -ne 0 ]; then
            echo "Failed to create patch for $asset"
            exit 1
          else
            echo "Successfully created patch for $asset"
          fi
        done

    - name: Upload patch files
      uses: actions/upload-artifact@v4
      with:
        name: patches
        path: patch_*.xdelta
